<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
    <!--    generator 的配置文件 路径从classpath开始-->
    <properties resource="mybatis/mybatis-generator/generator-config.properties"/>
    <context id="generator_tables" targetRuntime="MyBatis3" defaultModelType="flat">
        <!-- 生成的Java文件的编码 -->
        <property name="javaFileEncoding" value="UTF-8"/>
        <!-- 格式化java代码 -->
        <property name="javaFormatter" value="org.mybatis.generator.api.dom.DefaultJavaFormatter"/>
        <!-- 格式化XML代码 -->
        <property name="xmlFormatter" value="org.mybatis.generator.api.dom.DefaultXmlFormatter"/>
        <!-- 插件去除generator生成xml代码重复的问题 -->
        <plugin type="org.mybatis.generator.plugins.UnmergeableXmlMappersPlugin" />
        <commentGenerator>
            <property name="suppressDate" value="true" />
            <!-- 是否去除自动生成的注释 true：是 ： false:否 -->
            <property name="suppressAllComments" value="true" />
        </commentGenerator>
        <!--数据库连接属性配置-->
        <jdbcConnection driverClass="${driver-class-name}"
                        connectionURL="${url}"
                        userId="${username}"
                        password="${password}">
            <property name="nullCatalogMeansCurrent" value="true" />
        </jdbcConnection>
        <!--实体位置的配置-->
        <javaModelGenerator targetPackage="com.synuwxy.springbootnote.mybatis.entity.generator"
                            targetProject="src/main/java">
        </javaModelGenerator>
        <!--生成的sql位置的配置-->
        <sqlMapGenerator targetPackage="mybatis.mapper.generator"
                         targetProject="src/main/resources">
        </sqlMapGenerator>
        <!--生成sql对应的mapper的配置-->
        <javaClientGenerator type="XMLMAPPER"
                             targetPackage="com.synuwxy.springbootnote.mybatis.web.dao.generator"
                             targetProject="src/main/java">
        </javaClientGenerator>
        <!-- 映射表配置 -->
        <!--
           1，schema：数据库的schema；
           2，catalog：数据库的catalog；
           3，alias：为数据表设置的别名，如果设置了alias，那么生成的所有的SELECT SQL语句中，列名会变成：alias_actualColumnName
           4，domainObjectName：生成的domain类的名字，如果不设置，直接使用表名作为domain类的名字；可以设置为somepck.domainName，那么会自动把domainName类再放到somepck包里面；
           5，enableInsert（默认true）：指定是否生成insert语句；
           6，enableSelectByPrimaryKey（默认true）：指定是否生成按照主键查询对象的语句（就是getById或get）；
           7，enableSelectByExample（默认true）：MyBatis3Simple为false，指定是否生成动态查询语句；
           8，enableUpdateByPrimaryKey（默认true）：指定是否生成按照主键修改对象的语句（即update)；
           9，enableDeleteByPrimaryKey（默认true）：指定是否生成按照主键删除对象的语句（即delete）；
           10，enableDeleteByExample（默认true）：MyBatis3Simple为false，指定是否生成动态删除语句；
           11，enableCountByExample（默认true）：MyBatis3Simple为false，指定是否生成动态查询总条数语句（用于分页的总条数查询）；
           12，enableUpdateByExample（默认true）：MyBatis3Simple为false，指定是否生成动态修改语句（只修改对象中不为空的属性）；
           13，modelType：参考context元素的defaultModelType，相当于覆盖；
           14，delimitIdentifiers：参考tableName的解释，注意，默认的delimitIdentifiers是双引号，如果类似MYSQL这样的数据库，使用的是`（反引号，那么还需要设置context的beginningDelimiter和endingDelimiter属性）
           15，delimitAllColumns：设置是否所有生成的SQL中的列名都使用标识符引起来。默认为false，delimitIdentifiers参考context的属性
        -->
        <table tableName="user" domainObjectName="UserModel"
               enableInsert="true"
               enableSelectByPrimaryKey="true"
               enableUpdateByPrimaryKey="true"
               enableDeleteByPrimaryKey="true"
               enableCountByExample="false"
               enableUpdateByExample="false"
               enableDeleteByExample="false"
               enableSelectByExample="false"
               selectByExampleQueryId="false" >
            <!-- 如果设置为true，生成的model类会直接使用column本身的名字，而不会再使用驼峰命名方法-->
            <property name="useActualColumnNames" value="false" />
        </table>

    </context>
</generatorConfiguration>